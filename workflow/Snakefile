configfile: "config.yaml"

rule all:
    input:
        expand("data/sra/sh1000/{srr_sh1000}/{srr_sh1000}.sra", \
                    srr_sh1000 = config["SRR_SH1000"]),
        expand("data/sra/atcc6538/{srr_atcc6538}/{srr_atcc6538}.sra", \
                    srr_atcc6538 = config["SRR_ATCC6538"]),
        expand("data/sra/st398/{srr_st398}/{srr_st398}.sra", \
                    srr_st398 = config["SRR_ST398"]),
        expand("data/sra/atcc6538/{srr_atcc6538}_{mate}.fastq.gz", \
                srr_atcc6538 = config["SRR_ATCC6538"], mate = ["1", "2"]),
        expand("data/sra/sh1000/{srr_sh1000}_{mate}.fastq.gz", \
                srr_sh1000 = config["SRR_SH1000"], mate = ["1", "2"]),
        expand("data/sra/st398/{srr_st398}_{mate}.fastq.gz", \
                srr_st398 = config["SRR_ST398"], mate = ["1", "2"]),
        expand("data/sra/atcc6538/{srr_atcc6538}_{mate}.tr.fastq.gz", \
                srr_atcc6538 = config["SRR_ATCC6538"], mate = ["1", "2"]),
        expand("data/sra/sh1000/{srr_sh1000}_{mate}.tr.fastq.gz", \
                srr_sh1000 = config["SRR_SH1000"], mate = ["1", "2"]),
        expand("data/sra/st398/{srr_st398}_{mate}.tr.fastq.gz", \
                srr_st398 = config["SRR_ST398"], mate = ["1", "2"]),
        expand("results/atcc6538/{srr_atcc6538}/{srr_atcc6538}.log", \
	        srr_atcc6538 = config["SRR_ATCC6538"]),
        expand("results/sh1000/{srr_sh1000}/{srr_sh1000}.log", \
	        srr_sh1000 = config["SRR_SH1000"]),
        expand("results/st398/{srr_st398}/{srr_st398}.log", \
	        srr_st398 = config["SRR_ST398"]),
        "results/growth_data/20190906_gp_all.png",
        "results/growth_data/20190906_gp_no_sh.png",
        "results/growth_data/20190906_gp_sh.png",
        "results/growth_data/20190906_gp_sh_custom.png"

rule sra_atcc6538:
    input: "data/srr_atcc6538.txt"
    output: expand("data/sra/atcc6538/{srr_atcc6538}/{srr_atcc6538}.sra", \
                    srr_atcc6538 = config["SRR_ATCC6538"]),
    conda: "envs/sra.yaml"
    threads: 1
    shell: "prefetch --output-directory data/sra/atcc6538 --option-file {input}"

rule sra_sh1000:
    input: "data/srr_sh1000.txt"
    output: expand("data/sra/sh1000/{srr_sh1000}/{srr_sh1000}.sra", \
                    srr_sh1000 = config["SRR_SH1000"])
    conda: "envs/sra.yaml"
    threads: 1
    shell: "prefetch --output-directory data/sra/sh1000 --option-file {input}"

rule sra_st398:
    input: "data/srr_st398.txt"
    output: expand("data/sra/st398/{srr_st398}/{srr_st398}.sra", \
                    srr_st398 = config["SRR_ST398"])
    conda: "envs/sra.yaml"
    threads: 1
    shell: "prefetch --output-directory data/sra/st398 --option-file {input}"

rule dump:
    input: "data/sra/{genome}/{sample}/{sample}.sra"
    output:
        "data/sra/{genome}/{sample}_1.fastq.gz",
        "data/sra/{genome}/{sample}_2.fastq.gz"
    conda: "envs/dump.yaml"
    threads: 8
    shell: "parallel-fastq-dump --sra-id {input} --threads {threads} \
               --outdir data/sra/{wildcards.genome}/ --split-files --gzip"

rule trim:
    input:
        mate1="data/sra/{genome}/{sample}_1.fastq.gz",
        mate1="data/sra/{genome}/{sample}_2.fastq.gz"
    output:
        out1="data/sra/{genome}/{sample}_1.tr.fastq.gz",
        out2="data/sra/{genome}/{sample}_2.tr.fastq.gz"
    log: "logs/{genome}_{sample}.log"
    conda: "envs/trim.yaml"
    threads: 3
    shell:
        "fastp --in1 {input.mate1} \
               --in2 {input.mate2} \
	       --out1 {output.out1} \
	       --out2 {output.out2} \
	       --thread {threads} \
	       --length_required 50 \
	       --cut_tail \
	       --cut_tail_window_size 1 \
	       --cut_tail_mean_quality X 2> {log}"

#rule map:
#    input:
#        ref="data/{genome}.gbk",
#        mate1="data/sra/{genome}/{srr}_1.fastq.gz",
#        mate2="data/sra/{genome}/{srr}_2.fastq.gz"
#    output:
#        outd=directory("results/{genome}/{srr}"),
#        rnl="results/{genome}/{srr}/{srr}.log"
#    conda: "envs/snippy3.2.yaml"
#    threads: 10
##    log: "logs/{srr}.txt"
#    shell: "snippy --cpus {threads} \
#                   --outdir {output.outd} \
#                   --ref {input.ref} \
#                   --prefix {wildcards.srr} \
#                   --force \
#                   --pe1 {input.mate1} --pe2 {input.mate2}"

rule map_trim:
    input:
        ref="data/{genome}.gbk",
        mate1="data/sra/{genome}/{srr}_1.tr.fastq.gz",
        mate2="data/sra/{genome}/{srr}_2.tr.fastq.gz"
    output:
        outd=directory("results/{genome}/{srr}"),
        rnl="results/{genome}/{srr}/{srr}.log"
    conda: "envs/snippy3.2.yaml"
    threads: 10
#    log: "logs/{srr}.txt"
    shell: "snippy --cpus {threads} \
                   --outdir {output.outd} \
                   --ref {input.ref} \
                   --prefix {wildcards.srr} \
                   --force \
                   --pe1 {input.mate1} --pe2 {input.mate2}"


rule growth_data:
    input: csv="data/20190906_growth_data.csv"
    output:
        "results/growth_data/20190906_gp_all.png",
        "results/growth_data/20190906_gp_no_sh.png",
	"results/growth_data/20190906_gp_sh.png",
	"results/growth_data/20190906_gp_sh_custom.png"
    conda: "envs/growth_data.yaml"
    threads: 1
    script: "scripts/growth_data.R"

